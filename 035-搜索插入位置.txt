class Solution {
public:
    int searchInsert(vector<int>& nums, int target) {
       
        int index=0;
        for(int i=0;i<nums.size();i++)
        {
            if(nums[i]==target)
                return i;
            if(nums[i]>target)
            return i;
        }
        return nums.size();
    }
};

/*¶ş·Ö²éÕÒ*/
class Solution {
public:
    int searchInsert(vector<int>& nums, int target) {
        int low = 0;
        int high = nums.size()-1;
        int mid;
        if(target>nums[high]) return high + 1;
        while(low<=high){
            mid = low + (high-low)/2;
            if(nums[mid]==target) return mid;
            else if(nums[mid]>target) high = mid-1;
            else low = mid+1;
        }
        //if(target<nums[low]) return low;
        return low;
    }
};