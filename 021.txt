/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode* mergeTwoLists(ListNode* l1, ListNode* l2) {
        ListNode result(0);
        ListNode *r=&result;
        while(l1&&l2)
        {
        if(l1->val>l2->val)
        {
            r->next=new ListNode(l2->val);
            r=r->next;
            l2=l2->next;
        }
            else if(l1->val==l2->val)
            {
               r->next=new ListNode(l1->val);
               r=r->next;
               r->next=new ListNode(l2->val);
               r=r->next;
               l1=l1->next;
               l2=l2->next;
            }
            else 
            {
                r->next=new ListNode(l1->val);
                r=r->next;
                l1=l1->next;
            }
        }
        while(l1)
        {
            r->next=new ListNode(l1->val);
                r=r->next;
                l1=l1->next;
        }
        while(l2)
        {
             r->next=new ListNode(l2->val);
                r=r->next;
                l2=l2->next;
        }
        return result.next;
    }
};