
class Solution {
public:
    bool canJump(vector<int>& nums) {
       /* if(nums.size()==1)
            return true;
        vector<int>dp;
        dp.push_back(nums[0]);
        int i=0,j,flag=0,sub=nums.size(),l=nums.size()-1,record=0;
        while(i<nums.size()-2)
        {
            record=0;  j=1;
            if(dp[flag]==1)
                record=1;
            else if(dp[flag]==0)
                    return false;
             else
            {
            for(;j<=dp[flag]&&i+j<nums.size();j++)
            {
                if(l-i-j-nums[i+j]<=0)
                    return true;
                if(sub>l-i-j-nums[i+j])
                {
                    sub=l-i-j-nums[i+j];
                    record=j;
                }
            }
            }
            if(record==0)
                return false;
            flag++;dp.push_back(nums[i+record]);i=i+record;
        }
        return dp[flag]>0?true:false;*/
    }
};//渣渣写的代码


     class Solution {
public:
    bool canJump(vector<int>& nums) {

     if(nums.size() < 2) return true;
        int aim = nums.size() - 1;
        for(int i = aim - 1;i >= 0;--i){
            if( aim - i <= nums[i]){
                aim = i;
            }
        }
        return aim == 0;

    }
};//大佬写的代码