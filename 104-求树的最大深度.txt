/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    int maxDepth(TreeNode* root) {
       queue<TreeNode*> temp;
        int length=0;
        if(!root)
         return length;
        else
        {
            temp.push(root);
            length++;
        }
        while(!temp.empty())
        {
            bool judge=false;
            int a=temp.size();
            for(int i=0;i<a;i++)
            {
               if(temp.front()->left||temp.front()->right)
               {
                   judge=true;
                   if(temp.front()->left)
                       temp.push(temp.front()->left);
                   if(temp.front()->right)
                        temp.push(temp.front()->right);
               }
                temp.pop();
            }
             if(judge)
                    length++;
        }
        return length;
         /* if(root == NULL)
            return 0;
        
        int left = maxDepth(root -> left) + 1;
        int right = maxDepth(root -> right) + 1;
        return left > right ? left : right;*/ //µÝ¹é°æ
    }
};