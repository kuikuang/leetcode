/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> zigzagLevelOrder(TreeNode* root) {
        vector<int> one;
        vector<vector<int>> r;
        queue<TreeNode*> temp;
        bool order=true;
        if(!root)
         return r;
        temp.push(root);
        while(!temp.empty())
        {
            int a=temp.size();
            vector<int>re(a);
            for(int i=0;i<a;i++)
            {
                if(order)
                one.push_back(temp.front()->val);
                else
                    re[a-1-i]=temp.front()->val;
               if(temp.front()->left||temp.front()->right)
               {
               
                
                   if(temp.front()->left)
                       temp.push(temp.front()->left);
                   if(temp.front()->right)
                       temp.push(temp.front()->right);
                
               }
                temp.pop();
               
            }
              if(order)
              {
              r.push_back(one);
              one.clear();
              }
            else
              {
                r.push_back(re);
                re.clear();
              }
            order=!order;
        }
        return r;
    }
};