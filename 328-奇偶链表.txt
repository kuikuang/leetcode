class Solution {
public:
    ListNode* oddEvenList(ListNode* head) {
        if(!head||!head->next||!head->next->next)
            return head;
        ListNode*temp=head->next->next;
        ListNode*temp1=head;
        ListNode*temp2=head->next;
        ListNode*temp3=temp2;
        int flag=3;
        while(temp!=nullptr)
        {
            if(flag%2==1)
            {
                temp1->next=temp;
                temp1=temp1->next;
            }
            if(flag%2==0)
            {
                temp2->next=temp;
                temp2=temp2->next;
            }
            flag++;
            cout<<flag<<"¡¡";
            temp=temp->next;
        }
        temp2->next=nullptr;
        temp1->next=temp3;
        return head;
    }
};