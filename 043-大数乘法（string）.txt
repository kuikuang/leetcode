class Solution {
public:
    void add(string& res,string temp)
    {
        if(res.size()==0)
        {
            res+=temp;
            return;
        }
        int carry=0;
        int a;
        if(res.size()<temp.size())
        {
            int i=0;
           while(i<res.size())
            {
                a=(res[i]-48)+(temp[i]-48)+carry;
                temp[i]=(char)(a%10+48);
                carry=a/10;
                 i++;
            }
            while(i<temp.size())
            {
                a=temp[i]-48+carry;
                temp[i]=(char)(a%10+48);
                carry=a/10;
                i++;
            }
            if(carry)
            {
                string temp1(temp+char(carry + 48));
                	res = "";
			       res += temp1;
            }
            else
		    {
			res = temp;
		    }
            
        }
        else
        {
            int i=0;
          while(i<temp.size())
            {
                a=(res[i]-48)+(temp[i]-48)+carry;
                res[i]=(char)(a%10+48);
                carry=a/10;
               i++;
            }
            while(i<res.size())
            {
                a=res[i]-48+carry;
                res[i]=(char)(a%10+48);
                carry=a/10;
                    i++;
            }
            if(carry)
            {
                string temp1(res+char(carry + 48));
                res = "";
			    res += temp1;
            }  
        }
    }
    string multiply(string num1, string num2) {
        if(num1.size()==1&&num1[0]=='0')
            return num1;
        if(num2.size()==1&&num2[0]=='0')
            return num2;
       vector<string>row;
	
	string temp = "";
	string res = "";
	char b;
	int a;
	for (int i = num1.size()-1; i>=0; i--)
	{
		int carry = 0;
		for (int j = num2.size() - 1; j>=0; j--)
		{
			a = (num2[j] - 48)*(num1[i] - 48) + carry;
			carry = a / 10;
			b = (a % 10) + 48;
			temp += b;
			
		}
		if (carry)
			temp += (char)(carry + 48);
		
		row.push_back(temp);
		temp = "";
	}
	string zero = "";
	for (int i = 0; i<row.size(); i++)
	{
		
		row[i] =zero+row[i];
		zero += '0';
		cout << row[i] << " ";

	}

	for (int i = 0; i < row.size(); i++)
	{
		add(res, row[i]);
		
	}
	reverse(res.begin(),res.end());
	return res;
        
    
    }
};//自己写的 比较复杂 而且时间比较长

/*用时较短的做法*/
class Solution {
public:
    string multiply(string num1, string num2) {
        string res;
        int n1 = num1.size(), n2 = num2.size();
        int k = n1 + n2 - 2, carry = 0;
        vector<int> v(n1 + n2, 0);
        for (int i = 0; i < n1; ++i) {
            for (int j = 0; j < n2; ++j) {
                v[k - i - j] += (num1[i] - '0') * (num2[j] - '0');
            }
        }
        for (int i = 0; i < n1 + n2; ++i) {
            v[i] += carry;
            carry = v[i] / 10;
            v[i] %= 10;
        }
        int i = n1 + n2 - 1;
        while (v[i] == 0) --i;
        if (i < 0) return "0";
        while (i >= 0) res.push_back(v[i--] + '0');
        return res;
    }
};